<?xml version="1.0"?>
<project basedir="." default="git-deploy">
	<!-- ===========================Instructions ==================================== -->
	<!-- Before running the 'git-deploy' task make sure you run 'ssh git@github.com'  -->
	<!-- This is because ant cannot prompt user to answer whether or not to add the   -->
	<!-- host to the list of known hosts. Not doing so would lock up the task for     -->
	<!-- all eternity!                                                                -->
	
	<!-- ========================== Project Environment ============================= -->

	<property file="build.properties" />
	<property environment="env"/>
	<property name="src.dir" value="${basedir}/../../src" />
	<property name="war.dir" value="${basedir}/../../war" />
	<property name="javac.dir" value="${war.dir}/WEB-INF/classes" />
	<property name="build.dir" value="${basedir}/../../build" />
	<property name="war.name" value="diagramly.war" />

	<property name="github.repo" value="git@github.com:${username}/${remote.repo.name}.git" />
	<loadfile property="version" srcFile="../../VERSION" />

	<!-- ========================= Java Compiler class path ========================= -->

	<path id="javac.class.path">
		<fileset dir="${war.dir}/WEB-INF/lib" includes="*.jar" />
		<fileset dir="${env.GAE_SDK}/lib/shared" includes="servlet-api.jar" />
	</path>

	<!-- ================== Cleans the output directories ============================= -->

	<target name="clean">
		<delete dir="${local.repo}" includeemptydirs="true" failonerror="false" />
		<delete dir="${javac.dir}" includeemptydirs="true" failonerror="false" />
		<delete file="${build.dir}/${war.name}" includeemptydirs="true" failonerror="false" />
		<delete dir="jetty-temp" includeemptydirs="true" failonerror="false" />
	</target>

	<!-- ================= Compiles the code with Java compiler ====================== -->

	<target name="javac" depends="clean">
		<javac srcdir="${src.dir}" includes="**/*.java" encoding="utf-8" destdir="${javac.dir}" source="1.6" target="1.6" debug="true" debuglevel="lines,vars,source">
			<classpath refid="javac.class.path" />
		</javac>
		
		<copy todir="${javac.dir}/META-INF">
			<fileset dir="${src.dir}/META-INF" />
		</copy>
		
		<copy todir="${javac.dir}" file="${src.dir}/log4j.properties" />
	</target>

	<target name="war" depends="javac" description="Create a war file">
		<zip destfile="${build.dir}/${war.name}" basedir="${war.dir}" />
	</target>

	<target name="jetty.run">
		<jetty tempDirectory="jetty-temp">
			<webApp name="diagramly" warfile="${build.dir}/${war.name}" contextpath="/" />
		</jetty>
	</target>

	<!-- ================== Commits to Github repo and tags the release ================ -->

	<target name="git-stage" depends="clean">
		<exec executable="git" >
			<arg value="clone" />
			<arg value="${github.repo}" />
			<arg value="${local.repo}" />
		</exec>

		<delete includeEmptyDirs="true">
			<fileset dir="${local.repo}"/>
		</delete>

		<copy todir="${local.repo}" overwrite="true">
			<fileset dir="${basedir}/../..">
				<excludesfile name="github_excludes" />
			</fileset>
		</copy>

		<copy todir="${local.repo}/war/js/mxgraph" overwrite="true">
			<fileset dir="${grapheditor.dir}" />
		</copy>
		
		<copy overwrite="true" tofile="${local.repo}/etc/build/compiler.jar" file="${jscompiler}" />

		<move overwrite="true" tofile="${local.repo}/README" file="${local.repo}/etc/build/README-git" />
		
		<move overwrite="true" tofile="${local.repo}/etc/build/build.properties" file="${local.repo}/etc/build/github-build.properties" />
		
		<move overwrite="true" tofile="${local.repo}/war/WEB-INF/client_secrets.json" file="${local.repo}/war/WEB-INF/client_secrets_template.json" />
		
		<move overwrite="true" tofile="${local.repo}/war/WEB-INF/iconfinder_key" file="${local.repo}/war/WEB-INF/iconfinder_key_template" />
	</target>
	
	<!-- ================== Commits to Github repo and tags the release ================ -->

	<target name="git-deploy" depends="git-stage" >
		<exec executable="git" dir="${local.repo}">
			<arg value="add" />
			<arg value="." />
		</exec>

		<exec executable="git" dir="${local.repo}">
			<arg value="commit" />
			<arg value="-am" />
			<arg value="${version} release" />
		</exec>

		<exec executable="git" dir="${local.repo}">
			<arg value="push" />
			<arg value="origin" />
			<arg value="master" />
		</exec>

		<exec executable="git" dir="${local.repo}">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="v${version}" />
			<arg value="-m" />
			<arg value="v${version}" />
		</exec>

		<exec executable="git" dir="${local.repo}">
			<arg value="push" />
			<arg value="origin" />
			<arg value="--tags" />
		</exec>
	</target>

</project>
